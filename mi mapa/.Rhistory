library(shiny); runApp('conflictividad.R')
setwd("C:/Users/ASUS/Desktop/Portafolio/2. Visualizador conflictividad/mi mapa")
runApp('Visualizador-de-conflictos/conflictividad.R')
runApp('Visualizador-de-conflictos/conflictividad.R')
runApp('Visualizador-de-conflictos/conflictividad.R')
setwd("C:/Users/ASUS/Desktop/Portafolio/2. Visualizador conflictividad/mi mapa")
setwd("C:/Users/ASUS/Desktop/Portafolio/2. Visualizador conflictividad/mi mapa")
runApp('Visualizador-de-conflictos/conflictividad.R')
library(shiny); runApp('conflictividad.R')
library(shiny); runApp('conflictividad.R')
library(shiny); runApp('conflictividad.R')
names(mapa)
names(conflictos)
runApp('conflictividad.R')
names (mapa)
runApp('conflictividad.R')
library(shiny); runApp('conflictividad.R')
library(shiny); runApp('conflictividad.R')
library(shiny)
library(leaflet)
library(sf)
library(dplyr)
library(readxl)
library(tidyr)
sf::sf_use_s2(FALSE)
# --- Cargar shapefile ---
mapa <- st_read("geodir_ubigeo_inei.shp", quiet = TRUE)
mapa <- st_make_valid(mapa)
names (mapa)
runApp('conflictividad.R')
library(shiny); runApp('conflictividad.R')
library(shiny)
library(leaflet)
library(sf)
library(dplyr)
library(readxl)
library(tidyr)
sf::sf_use_s2(FALSE)
# --- Cargar shapefile ---
mapa <- st_read("geodir_ubigeo_inei.shp", quiet = TRUE)
mapa <- st_make_valid(mapa)
names(mapa)
library(shiny)
library(leaflet)
library(sf)
library(dplyr)
library(readxl)
library(tidyr)
sf::sf_use_s2(FALSE)
# --- Cargar shapefile ---
mapa <- st_read("geodir_ubigeo_inei.shp", quiet = TRUE)
mapa <- st_make_valid(mapa)
# --- Cargar bases ---
conflictos <- read_excel("defensoria 08.xlsx")
idh_raw <- read_excel("IDH_limpio.xlsx")
# --- Reestructurar IDH (de ancho a largo) ---
idh <- idh_raw %>%
pivot_longer(
cols = starts_with("IDH"),
names_to = "anio",
values_to = "idh"
) %>%
mutate(
anio = as.numeric(gsub("IDH ", "", anio))
)
# --- Unir shapefile con conflictos ---
conflictos <- conflictos %>%
mutate(Ubigeo = as.character(Ubigeo))
mapa_data <- mapa %>%
mutate(ubigeo = as.character(ubigeo)) %>%
left_join(conflictos, by = c("ubigeo" = "Ubigeo"))
names(mapa_data)
idh <- read_excel("IDH_limpio.xlsx")
names(idh)
runApp('conflictividad.R')
library(shiny); runApp('conflictividad.R')
rsconnect::setAccountInfo(name='marciaantuanette',
token='7A1F114C7BFB22FDF35022A894D71487',
secret='1KVb1B5X4xhxNpzM+iUeHFoCz77la2pSjaInDjPa')
runApp('conflictividad.R')
rsconnect::setAccountInfo(name='marciaantuanette',
token='7A1F114C7BFB22FDF35022A894D71487',
secret='1KVb1B5X4xhxNpzM+iUeHFoCz77la2pSjaInDjPa')
install.packages("terra")
remove.packages("terra")  # por si hay una instalación rota
install.packages("terra", dependencies = TRUE)
# 1️⃣ Elimina cualquier rastro previo de renv
unlink("renv", recursive = TRUE)
unlink("renv.lock")
# 2️⃣ Limpia cualquier .RData o .Rhistory que interfiera
if (file.exists(".RData")) file.remove(".RData")
if (file.exists(".Rhistory")) file.remove(".Rhistory")
# 3️⃣ Reinstala dependencias necesarias
install.packages(c("rsconnect", "sf", "shiny", "leaflet", "dplyr", "readxl"))
# 4️⃣ Vuelve a desplegar
library(rsconnect)
rsconnect::deployApp("C:/Users/ASUS/Desktop/Portafolio/2. Visualizador conflictividad/mi mapa")
# 1️⃣ Desactiva renv globalmente
Sys.setenv(RENV_CONFIG_ENABLED = "FALSE")
# 2️⃣ Limpia cualquier traza previa
unlink("renv", recursive = TRUE)
unlink("renv.lock")
# 3️⃣ Limpia el entorno
if (file.exists(".RData")) file.remove(".RData")
# 4️⃣ Reinstala los paquetes base necesarios
install.packages(c("rsconnect", "shiny", "leaflet", "sf", "dplyr", "readxl"))
# 5️⃣ Despliega sin validación ni snapshot
options(renv.config.snapshot.validate = FALSE)
rsconnect::deployApp(
appDir = "C:/Users/ASUS/Desktop/Portafolio/2. Visualizador conflictividad/mi mapa",
appPrimaryDoc = "conflictividad.R",
account = "marciaantuanette",
server = "shinyapps.io",
appName = "Visualizador"
)
renv::status()
Sys.setenv(RENV_CONFIG_ENABLED = "FALSE")
options(renv.config.snapshot.validate = FALSE)
rsconnect::deployApp(
appDir = "C:/Users/ASUS/Desktop/Portafolio/2. Visualizador conflictividad/mi mapa",
appPrimaryDoc = "conflictividad.R",
account = "marciaantuanette",
server = "shinyapps.io",
appName = "Visualizador",
forceUpdate = TRUE
)
install.packages("terra", dependencies = TRUE)
install.packages("terra", type = "source")
R.version
system("g++ --version")
install.packages("terra", type = "source")
pkgbuild::find_rtools()
install.packages(c("Rcpp", "sp", "sf", "units", "raster"))
install.packages("terra", type = "binary")
library(terra)
rsconnect::deployApp()
library(rsconnect)
rsconnect::deployApp(
appDir = "C:/Users/ASUS/Desktop/Portafolio/2. Visualizador conflictividad/mi mapa",
appName = "Visualizador",
account = "marciaantuanette"
)
library(rsconnect)
rsconnect::deployApp(
appDir = "C:/Users/ASUS/Desktop/Portafolio/2. Visualizador conflictividad/mi mapa",
appPrimaryDoc = "conflictividad.R",
appName = "Visualizador",
account = "marciaantuanette",
server = "shinyapps.io"
)
library(rsconnect)
rsconnect::showLogs(appName = "Visualizador", streaming = TRUE)
library(rsconnect)
rsconnect::showLogs(appName = "Visualizador", streaming = TRUE)
rsconnect::deployApp(
appDir = "C:/Users/ASUS/Desktop/Portafolio/2. Visualizador conflictividad/mi mapa",
appName = "Visualizador"
)
shinyApp(ui = ui, server = server)
library(shiny); runApp('app.R.R')
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
shiny::runApp("mi_mapa")
source("C:/Users/ASUS/Desktop/Portafolio/2. Visualizador conflictividad/mi mapa/conflictividad.R")
runApp('app.R.R')
rsconnect::deployApp(
appDir = "C:/Users/ASUS/Desktop/Portafolio/2. Visualizador conflictividad/mi mapa",
appName = "Visualizador"
)
shiny::runApp()
shiny::runApp("C:/Users/ASUS/Desktop/Portafolio/2. Visualizador conflictividad/mi mapa")
rsconnect::deployApp("C:/Users/ASUS/Desktop/Portafolio/2. Visualizador conflictividad/mi mapa")
